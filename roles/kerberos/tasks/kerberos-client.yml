#tasks for configuring kerneros clients
- name: check reachability to kdc server
  ansible.builtin.shell:
    cmd:
      ping -c 1 {{ realms.subdomain }}.{{ realms.domain }}

- name: install kerberos packages
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
  with_items:
    - krb5-libs
    - krb5-workstation

- name: copy krb5.conf to clients
  ansible.builtin.copy:
    dest: /etc/krb5.conf
    content: |
      # To opt out of the system crypto-policies configuration of krb5, remove the
      # symlink at /etc/krb5.conf.d/crypto-policies which will not be recreated.
      # includedir /etc/krb5.conf.d/

      [logging]
          default = FILE:/var/log/krb5libs.log
          kdc = FILE:/var/log/krb5kdc.log
          admin_server = FILE:/var/log/kadmind.log

      [libdefaults]
          dns_lookup_realm = false
          ticket_lifetime = 24h
          renew_lifetime = 7d
          forwardable = true
          rdns = false
          pkinit_anchors = FILE:/etc/pki/tls/certs/ca-bundle.crt
          spake_preauth_groups = {{ kdc.preauth_challenge }}
          default_realm = {{ realms.domain | upper }}
          default_ccache_name = KEYRING:persistent:%{uid}

      [realms]
       {{ realms.domain | upper }} = {
          kdc = {{ realms.subdomain }}.{{ realms.domain }}
          admin_server = {{ realms.subdomain }}.{{ realms.domain }}
       }
    owner: root
    group: root
    mode: '0644'
  when: ansible_hostname != kdc.host

- name: check if keytab exists
  ansible.builtin.stat:
    path: /etc/krb5.keytab
  register: keytab

- name: remove existing keytab
  ansible.builtin.file:
    path: /etc/krb5.keytab
    state: absent
  when: clients.regen_keytab

- name: get tgt for kerberos admin
  ansible.builtin.shell:
    cmd: >
      /usr/bin/kinit {{ realms.root_principal }}/admin <<< {{ realms.root_principal_pass }}
  when: (not keytab.stat.exists) or clients.regen_keytab
  no_log: true

- name: check if host principals exists
  ansible.builtin.shell:
    cmd: >
      /usr/bin/kadmin -q 'listprincs host/{{ ansible_hostname }}.{{ realms.domain }}' <<< {{ realms.root_principal_pass }}
  register: host_princ_check
  failed_when: host_princ_check.stdout_lines[2] is not defined
  ignore_errors: true
  when: (not keytab.stat.exists) or clients.regen_keytab
  no_log: true

- name: generate keytabs
  ansible.builtin.shell:
    cmd: >
      /usr/bin/kadmin -q 'ktadd host/{{ ansible_hostname }}.{{ realms.domain }}' <<< {{ realms.root_principal_pass }}
  when: host_princ_check is succeeded and ((not keytab.stat.exists) or clients.regen_keytab)
  no_log: true

- name: allow read permission to keytab file
  ansible.builtin.file:
    path: /etc/krb5.keytab
    mode: '0644'
  when: (not keytab.stat.exists) or clients.regen_keytab

- name: destroy tgt of kerberos admin
  ansible.builtin.shell:
    cmd: >
      /usr/bin/kdestroy
  when: (not keytab.stat.exists) or clients.regen_keytab